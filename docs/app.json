[{"name":"app.R","content":"library(shiny)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(shinythemes)\n\nfatal <- read.csv(\"https://raw.githubusercontent.com/washingtonpost/data-police-shootings/master/v2/fatal-police-shootings-data.csv\")\n\n# Convert date to year for plotting purposes\nfatal$year <- format(as.Date(fatal$date), \"%Y\")\n\nui <- fluidPage(theme = shinytheme(\"flatly\"),\n                titlePanel(\"Fatal Police Interactions\"),\n                \n                sidebarLayout(\n                  sidebarPanel(\n                    # Crosstab Inputs\n                    conditionalPanel(\n                      condition = \"input.tabselected == 1\",\n                      selectInput(\"row_var\", \"Row Variable:\", choices = names(fatal), selected = \"race\"),\n                      selectInput(\"col_var\", \"Column Variable:\", choices = names(fatal), selected = \"gender\"),\n                      checkboxInput(\"show_props\", \"Show Row Proportions\", FALSE)\n                    ),\n                    \n                    # ggplot Inputs\n                    conditionalPanel(\n                      condition = \"input.tabselected == 2\",\n                      selectInput(\"plot_type\", \"Plot Type:\",\n                                  choices = c(\"Bar Chart\", \"Scatter Plot\")),\n                      \n                      # Variables for plots\n                      selectInput(\"x_var\", \"X Variable:\", choices = names(fatal), selected = \"year\"),\n                      selectInput(\"y_var\", \"Y Variable:\", choices = names(fatal), selected = \"age\")\n                    )\n                  ),\n                  \n                  mainPanel(\n                    tabsetPanel(\n                      id = \"tabselected\",\n                      tabPanel(\"Crosstab\", value = 1, DT::dataTableOutput(\"crosstab\")),\n                      tabPanel(\"ggplot\", value = 2, plotOutput(\"ggplot_plot\"))\n                    )\n                  )\n                )\n)\n\nserver <- function(input, output) {\n  \n  output$crosstab <- DT::renderDataTable({\n    row_var <- input$row_var\n    col_var <- input$col_var\n    \n    cross_tab <- table(fatal[[row_var]], fatal[[col_var]])\n    \n    if (input$show_props) {\n      cross_tab <- prop.table(cross_tab, margin = 1)\n    }\n    \n    as.data.frame.matrix(cross_tab)\n  })\n  \n  output$ggplot_plot <- renderPlot({\n    x_var <- input$x_var\n    y_var <- input$y_var\n    \n    if (input$plot_type == \"Bar Chart\") {\n      ggplot(fatal, aes(x = .data[[x_var]])) +\n        geom_bar(fill = \"skyblue\") +\n        theme_minimal() +\n        labs(title = paste(\"Bar Chart of\", x_var),\n             x = x_var,\n             y = \"Count\") +\n        theme(axis.text.x = element_text(angle = 45, hjust = 1))\n    } else if (input$plot_type == \"Scatter Plot\") {\n      ggplot(fatal, aes(x = .data[[x_var]], y = .data[[y_var]])) +\n        geom_point(color = \"steelblue\") +\n        theme_minimal() +\n        labs(title = paste(\"Scatter Plot of\", y_var, \"vs.\", x_var),\n             x = x_var,\n             y = y_var)\n    }\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n","type":"text"}]
